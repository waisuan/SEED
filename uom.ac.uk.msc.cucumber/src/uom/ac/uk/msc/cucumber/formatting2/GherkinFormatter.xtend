/*
 * generated by Xtext
 */
package uom.ac.uk.msc.cucumber.formatting2;

import com.google.inject.Inject;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.formatting2.AbstractFormatter2;
import org.eclipse.xtext.formatting2.IFormattableDocument;
import uom.ac.uk.msc.cucumber.gherkin.Background;
import uom.ac.uk.msc.cucumber.gherkin.Examples;
import uom.ac.uk.msc.cucumber.gherkin.Feature;
import uom.ac.uk.msc.cucumber.gherkin.Scenario;
import uom.ac.uk.msc.cucumber.gherkin.ScenarioOutline;
import uom.ac.uk.msc.cucumber.gherkin.Step;
import uom.ac.uk.msc.cucumber.gherkin.Table;
import uom.ac.uk.msc.cucumber.gherkin.Tag;
import uom.ac.uk.msc.cucumber.services.GherkinGrammarAccess;

class GherkinFormatter extends AbstractFormatter2 {
	
	@Inject extension GherkinGrammarAccess

	def dispatch void format(Feature feature, extension IFormattableDocument document) {	
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (Tag tags : feature.getTags()) {
			format(tags, document);
		}
		format(feature.getBackground(), document);
		for (EObject scenarios : feature.getScenarios()) {
			format(scenarios, document);
		}
	}

	def dispatch void format(Background background, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (Step steps : background.getSteps()) {
			format(steps, document);
		}
	}

	def dispatch void format(Scenario scenario, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (Tag tags : scenario.getTags()) {
			format(tags, document);
		}
		for (Step steps : scenario.getSteps()) {
			format(steps, document);
		}
	}

	def dispatch void format(ScenarioOutline scenariooutline, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (Tag tags : scenariooutline.getTags()) {
			format(tags, document);
		}
		for (Step steps : scenariooutline.getSteps()) {
			format(steps, document);
		}
		format(scenariooutline.getExamples(), document);
	}

	def dispatch void format(Step step, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc.
		for (Table tables : step.getTables()) {
			format(tables, document);
		}
		format(step.getCode(), document);
	}

	def dispatch void format(Examples examples, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		format(examples.getTable(), document);
	}
}
